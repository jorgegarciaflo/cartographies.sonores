{"version":3,"sources":["../../src/dispatcher.js"],"names":[],"mappings":"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","file":"dispatcher.js","sourcesContent":["/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\n\n/*\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Dispatcher\n * @typechecks\n */\n\n\nvar _lastID = 1;\nvar _prefix = 'ID_';\n\n/**\n * Dispatcher is used to broadcast payloads to registered callbacks. This is\n * different from generic pub-sub systems in two ways:\n *\n *   1) Callbacks are not subscribed to particular events. Every payload is\n *      dispatched to every registered callback.\n *   2) Callbacks can be deferred in whole or part until other callbacks have\n *      been executed.\n *\n * For example, consider this hypothetical flight destination form, which\n * selects a default city when a country is selected:\n *\n *   var flightDispatcher = new Dispatcher();\n *\n *   // Keeps track of which country is selected\n *   var CountryStore = {country: null};\n *\n *   // Keeps track of which city is selected\n *   var CityStore = {city: null};\n *\n *   // Keeps track of the base flight price of the selected city\n *   var FlightPriceStore = {price: null}\n *\n * When a user changes the selected city, we dispatch the payload:\n *\n *   flightDispatcher.dispatch({\n *     actionType: 'city-update',\n *     selectedCity: 'paris'\n *   });\n *\n * This payload is digested by `CityStore`:\n *\n *   flightDispatcher.register(function(payload)) {\n *     if (payload.actionType === 'city-update') {\n *       CityStore.city = payload.selectedCity;\n *     }\n *   });\n *\n * When the user selects a country, we dispatch the payload:\n *\n *   flightDispatcher.dispatch({\n *     actionType: 'country-update',\n *     selectedCountry: 'australia'\n *   });\n *\n * This payload is digested by both stores:\n *\n *    CountryStore.dispatchToken = flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'country-update') {\n *       CountryStore.country = payload.selectedCountry;\n *     }\n *   });\n *\n * When the callback to update `CountryStore` is registered, we save a reference\n * to the returned token. Using this token with `waitFor()`, we can guarantee\n * that `CountryStore` is updated before the callback that updates `CityStore`\n * needs to query its data.\n *\n *   CityStore.dispatchToken = flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'country-update') {\n *       // `CountryStore.country` may not be updated.\n *       flightDispatcher.waitFor([CountryStore.dispatchToken]);\n *       // `CountryStore.country` is now guaranteed to be updated.\n *\n *       // Select the default city for the new country\n *       CityStore.city = getDefaultCityForCountry(CountryStore.country);\n *     }\n *   });\n *\n * The usage of `waitFor()` can be chained, for example:\n *\n *   FlightPriceStore.dispatchToken =\n *     flightDispatcher.register(function(payload)) {\n *       switch (payload.actionType) {\n *         case 'country-update':\n *           flightDispatcher.waitFor([CityStore.dispatchToken]);\n *           FlightPriceStore.price =\n *             getFlightPriceStore(CountryStore.country, CityStore.city);\n *           break;\n *\n *         case 'city-update':\n *           FlightPriceStore.price =\n *             FlightPriceStore(CountryStore.country, CityStore.city);\n *           break;\n *     }\n *   });\n *\n * The `country-update` payload will be guaranteed to invoke the stores'\n * registered callbacks in order: `CountryStore`, `CityStore`, then\n * `FlightPriceStore`.\n */\n\n  function Dispatcher() {\"use strict\";\n    this.$Dispatcher_callbacks = {};\n    this.$Dispatcher_isPending = {};\n    this.$Dispatcher_isHandled = {};\n    this.$Dispatcher_isDispatching = false;\n    this.$Dispatcher_pendingPayload = null;\n  }\n\n  /**\n   * Registers a callback to be invoked with every dispatched payload. Returns\n   * a token that can be used with `waitFor()`.\n   *\n   * @param {function} callback\n   * @return {string}\n   */\n  Dispatcher.prototype.register=function(callback) {\"use strict\";\n    var id = _prefix + _lastID++;\n    this.$Dispatcher_callbacks[id] = callback;\n    return id;\n  };\n\n  /**\n   * Removes a callback based on its token.\n   *\n   * @param {string} id\n   */\n  Dispatcher.prototype.unregister=function(id) {\"use strict\";\n    invariant(\n      this.$Dispatcher_callbacks[id],\n      'Dispatcher.unregister(...): `%s` does not map to a registered callback.',\n      id\n    );\n    delete this.$Dispatcher_callbacks[id];\n  };\n\n  /**\n   * Waits for the callbacks specified to be invoked before continuing execution\n   * of the current callback. This method should only be used by a callback in\n   * response to a dispatched payload.\n   *\n   * @param {array<string>} ids\n   */\n  Dispatcher.prototype.waitFor=function(ids) {\"use strict\";\n    invariant(\n      this.$Dispatcher_isDispatching,\n      'Dispatcher.waitFor(...): Must be invoked while dispatching.'\n    );\n    for (var ii = 0; ii < ids.length; ii++) {\n      var id = ids[ii];\n      if (this.$Dispatcher_isPending[id]) {\n        invariant(\n          this.$Dispatcher_isHandled[id],\n          'Dispatcher.waitFor(...): Circular dependency detected while ' +\n          'waiting for `%s`.',\n          id\n        );\n        continue;\n      }\n      invariant(\n        this.$Dispatcher_callbacks[id],\n        'Dispatcher.waitFor(...): `%s` does not map to a registered callback.',\n        id\n      );\n      this.$Dispatcher_invokeCallback(id);\n    }\n  };\n\n  /**\n   * Dispatches a payload to all registered callbacks.\n   *\n   * @param {object} payload\n   */\n  Dispatcher.prototype.dispatch=function(payload) {\"use strict\";\n    invariant(\n      !this.$Dispatcher_isDispatching,\n      'Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch.'\n    );\n    this.$Dispatcher_startDispatching(payload);\n    try {\n      for (var id in this.$Dispatcher_callbacks) {\n        if (this.$Dispatcher_isPending[id]) {\n          continue;\n        }\n        this.$Dispatcher_invokeCallback(id);\n      }\n    } finally {\n      this.$Dispatcher_stopDispatching();\n    }\n  };\n\n  /**\n   * Is this Dispatcher currently dispatching.\n   *\n   * @return {boolean}\n   */\n  Dispatcher.prototype.isDispatching=function() {\"use strict\";\n    return this.$Dispatcher_isDispatching;\n  };\n\n  /**\n   * Call the calback stored with the given id. Also do some internal\n   * bookkeeping.\n   *\n   * @param {string} id\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_invokeCallback=function(id) {\"use strict\";\n    this.$Dispatcher_isPending[id] = true;\n    this.$Dispatcher_callbacks[id](this.$Dispatcher_pendingPayload, this);\n    this.$Dispatcher_isHandled[id] = true;\n  };\n\n  /**\n   * Set up bookkeeping needed when dispatching.\n   *\n   * @param {object} payload\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_startDispatching=function(payload) {\"use strict\";\n    for (var id in this.$Dispatcher_callbacks) {\n      this.$Dispatcher_isPending[id] = false;\n      this.$Dispatcher_isHandled[id] = false;\n    }\n    this.$Dispatcher_pendingPayload = payload;\n    this.$Dispatcher_isDispatching = true;\n  };\n\n  /**\n   * Clear bookkeeping used for dispatching.\n   *\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_stopDispatching=function() {\"use strict\";\n    this.$Dispatcher_pendingPayload = null;\n    this.$Dispatcher_isDispatching = false;\n  };\n\nvar Dispatcher = new Dispatcher();\nDispatcher.handleViewAction = function(action) {\n    this.dispatch({\n        source: 'VIEW_ACTION',\n        action: action\n    });\n};\n"]}
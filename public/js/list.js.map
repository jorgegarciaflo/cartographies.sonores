{"version":3,"sources":["../../src/list.js"],"names":[],"mappings":";;AAAA,IAAI,YAAY,GAAI,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE;AACvD,QAAI,MAAM,GAAG,EAAE,CAAA;AACf,QAAI,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;;AAE5B,QAAI,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC7B,uBAAe,EAAE,2BAAY;AACzB,mBAAO,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;SAC5B;;AAED,cAAM,EAAE,kBAAY;AAChB,gBAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;AAEvB,gBAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAS,CAAC,EAAE,GAAG,EAAE;AAC9C,oBAAI,KAAK,CAAC,MAAM,EACZ,OAAO;;sBAAI,GAAG,EAAE,GAAG,AAAC;oBAAE,CAAC;iBAAM,CAAC,KAE9B,OAAO;;sBAAI,SAAS,EAAG,SAAS,GAAG,KAAK,CAAC,MAAM,AAAC,EAAC,GAAG,EAAE,GAAG,AAAC;oBAAC;AAAC,4BAAI;0BAAC,EAAE,EAAC,QAAQ,EAAC,MAAM,EAAE,EAAC,SAAS,EAAE,KAAK,CAAC,OAAO,EAAC,AAAC;wBAAE,CAAC;qBAAQ;iBAAK,CAAA;aACvI,CAAC,CAAC,OAAO,EAAE,CAAC;;AAEb,gBAAI,KAAK,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,GAAG,WAAW,GAAG,MAAM,EAAE,CAAC;AAC9D,mBAAO;;kBAAI,KAAK,EAAE,KAAK,AAAC;gBAAE,KAAK;aAAM,CAAC;SACzC;KACJ,CAAC,CAAC;;AAEH,QAAI,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC/B,cAAM,EAAE,kBAAY;AAChB,mBAAO;;;gBAAI,+BAAO,QAAQ,EAAE,IAAI,CAAC,SAAS,AAAC,GAAE;aAAK,CAAC;SACtD;;AAED,iBAAS,EAAE,mBAAU,CAAC,EAAE;AACpB,gBAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACvC;KACJ,CAAC,CAAC;;AAEH,QAAI,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC1B,uBAAe,EAAE,2BAAW;AACxB,mBAAO,EAAE,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC;SACpD;;AAED,yBAAiB,EAAE,6BAAY;AAC3B,kBAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7D;;AAED,4BAAoB,EAAE,gCAAW;AAC7B,kBAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SAC9D;;AAED,cAAM,EAAE,kBAAW;AACf,gBAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACvB,gBAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;AAEvB,gBAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAS,CAAC,EAAE,CAAC,EAAE;AACrC,oBAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAS,CAAC,EAAE;AACtC,2BAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACnB,CAAC,CAAC;;AAEH,uBAAO,oBAAC,QAAQ;AACJ,uBAAG,EAAE,CAAC,AAAC;AACP,yBAAK,EAAE,KAAK,AAAC;AACb,0BAAM,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,AAAC;AACxB,2BAAO,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;AAC9B,2BAAO,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,AAAC,GAAG,CAAA;aACvC,CAAC,CAAC,OAAO,EAAE,CAAC;;AAEb,gBAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC3B,gBAAI,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAS,CAAC,EAAE,CAAC,EAAE;AAC9C,oBAAI,EAAE,GAAG,SAAL,EAAE,CAAa,KAAK,EAAE;AAAE,2BAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;iBAAE,CAAC;AAChD,uBAAO,oBAAC,UAAU,IAAC,GAAG,EAAE,CAAC,AAAC,EAAC,QAAQ,EAAE,EAAE,AAAC,GAAG,CAAC;aAC/C,CAAC,CAAC,OAAO,EAAE,CAAC;;AAEb,mBACQ;;kBAAO,SAAS,EAAC,OAAO;gBACpB,oBAAC,QAAQ,IAAC,MAAM,EAAE,IAAI,AAAC,EAAC,KAAK,EAAE,KAAK,CAAC,YAAY,AAAC,EAAC,OAAO,EAAE,IAAI,AAAC,GAAE;gBACnE;;;oBAAK,UAAU;iBAAM;gBACpB,IAAI;aACD,CACP;SACZ;;AAED,eAAO,EAAE,iBAAS,MAAM,EAAE,KAAK,EAAE;AAC7B,mBAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAChD;;AAED,sBAAc,EAAE,0BAAY;AACxB,gBAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;SAC5D;KACJ,CAAC,CAAC;;AAEH,UAAM,CAAC,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC5B,uBAAe,EAAE,2BAAW;AACxB,mBAAO,EAAE,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC;SAC7C;;AAED,cAAM,EAAE,kBAAW;AACf,mBACQ,oBAAC,KAAK;AACF,oBAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,AAAC;AACtB,uBAAO,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,AAAC;AAChF,4BAAY,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,AAAC;cACzF,CACD;SACZ;KACJ,CAAC,CAAC;;AAEH,WAAO,MAAM,CAAC;CACjB,CAAA,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC,AAAC,CAAC","file":"list.js","sourcesContent":["var LanguageList = (function (Stores, Actions, Dispatcher) {\n    var module = {}\n    var Link = ReactRouter.Link;\n\n    var TableRow = React.createClass({\n        getDefaultProps: function () {\n            return { header: false };\n        },\n\n        render: function () {\n            var props = this.props;\n\n            var items = this.props.items.map(function(v, col) {\n                if (props.header)\n                    return <th key={col}>{v}</th>;\n                else\n                    return <td className={ \"status-\" + props.status} key={col}><Link to=\"langue\" params={{langue_id: props.item_id}}>{v}</Link></td>\n            }).toArray();\n\n            var style = { display: props.display ? 'table-row' : 'none' };\n            return <tr style={style}>{items}</tr>;\n        }\n    });\n\n    var SearchCell = React.createClass({\n        render: function () {\n            return <td><input onChange={this._onChange}/></td>;\n        },\n\n        _onChange: function (e) {\n            this.props.callback(e.target.value);\n        }\n    });\n\n    var Table = React.createClass({\n        getInitialState: function() {\n            return { display: Stores.language.getDisplay() };\n        },\n\n        componentDidMount: function () {\n            Stores.language.on('update_display', this._updateDisplay);\n        },\n\n        componentWillUnmount: function() {\n            Stores.language.off('update_display', this._updateDisplay);\n        },\n\n        render: function() {\n            var props = this.props;\n            var state = this.state;\n\n            var rows = props.data.map(function(r, i) {\n                var items = props.columns.map(function(c) {\n                    return r.get(c);\n                });\n       \n                return <TableRow \n                            key={i}\n                            items={items} \n                            status={r.get('status')}\n                            display={state.display.get(i)}\n                            item_id={r.get('id')} />\n            }).toArray();\n\n            var _filter = this._filter;\n            var search_row = props.columns.map(function(c, i) {\n                var cb = function (value) { _filter(c, value) };\n                return <SearchCell key={i} callback={cb} />;\n            }).toArray();\n\n            return (\n                    <table className=\"table\">\n                        <TableRow header={true} items={props.column_names} display={true}/>\n                        <tr>{search_row}</tr>\n                        {rows}\n                    </table>\n                   );\n        },\n\n        _filter: function(column, value) {\n            Actions.language.updateFilter(column, value);\n        },\n\n        _updateDisplay: function () {\n            this.setState({ display: Stores.language.getDisplay() });\n        }\n    });\n\n    module.view = React.createClass({\n        getInitialState: function() {\n            return { data: Stores.language.getAll() };\n        },\n\n        render: function() {\n            return (\n                    <Table\n                        data={this.state.data}\n                        columns={Immutable.List(['name', 'glottonym', 'country', 'family', \"speakers\"])}\n                        column_names={Immutable.List(['Langue', 'Glottonyme', 'Pays', 'Famille', \"Locuteurs\"])}\n                    />\n                   );\n        }\n    });\n\n    return module;\n}(Stores, Actions, Dispatcher));\n"]}
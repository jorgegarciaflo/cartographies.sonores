{"version":3,"sources":["../../src/store.js"],"names":[],"mappings":"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","file":"store.js","sourcesContent":["\n/*\n * We do not use a Flux architecture for this prototype, so things\n * are a bit ugly...\n */\nvar Stores = (function (Dispatcher) {\n    var module = {};\n\n    module.language = (function() {\n        var Store = function (dispatcher) {\n            this.load([]);\n            this.token = dispatcher.register(this.handlePayload.bind(this));\n        };\n        Store.prototype = new EventEmitter();\n\n        Store.prototype.load = function (data) {\n            this._data = Immutable.fromJS(data);\n            this._displayed = this._data.map(function() { return true; });\n\n            this._filters = Immutable.Map({});\n\n            if (this._data.count() == 0)\n                this._columns = Immutable.List();\n            else\n                this._columns = this._data.get(0).keySeq();\n\n            this._columns.forEach(function (c) {\n                this._filters = this._filters.set(c, \"\");\n            }.bind(this));\n\n            this.trigger('update');\n        };\n\n        Store.prototype.getDisplay = function () {\n            return this._displayed;\n        };\n\n        Store.prototype.getAll = function() {\n                return this._data;\n        };\n\n        Store.prototype.updateFilter = function(column, value) {\n            this._filters = this._filters.set(column, value.toLowerCase());\n\n            var _filters = this._filters;\n            var columns = this._columns;\n\n            this._displayed = this._data.map(function(row) {\n                return _filters.keySeq().every(function(column) {\n                    var value = String(row.get(column)).toLowerCase();\n                    var filter = _filters.get(column);\n                    return value.indexOf(filter) >= 0;\n                });\n            });\n\n            this.trigger('update_display');\n        };\n\n        Store.prototype.handlePayload = function (payload, dispatcher) {\n            switch(payload.action.actionType) {\n                case 'UPDATE_FILTER':\n                    this.updateFilter(payload.action.column, payload.action.value);\n                    break;\n            }\n        };\n\n        return new Store(Dispatcher);\n    } ());\n\n    module.details = (function() {\n        var Store = function(dispatcher) {\n            this.language_id= null;\n            this.data = null;\n            this.cache = Immutable.Map();\n            this.token = dispatcher.register(this.handlePayload.bind(this));\n        };\n        Store.prototype = new EventEmitter();\n\n        Store.prototype.get = function (id) {\n            var str_id = String(id);\n\n            if (this.cache.has(str_id))\n            {\n                return this.cache.get(str_id);\n            } \n            else\n            {\n                $.get('data/' + str_id, function(data) {\n                    this.cache = this.cache.set(str_id, Immutable.fromJS(data));\n                    this.trigger('update');\n                }.bind(this));\n\n                return null;\n             } \n        }\n\n        Store.prototype.handlePayload = function (payload, dispatcher) {\n        };\n\n        return new Store(Dispatcher);\n    })();\n\n    return module;\n})(Dispatcher);\n"]}